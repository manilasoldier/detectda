from detectda.imgs import ImageSeriesPickle
import numpy as np

impol = ImageSeriesPickle('test_video.pkl', div=32, n_jobs=2)

impol.fit(sigma=2)

impol.get_pers_entr(neg=False)
impol.get_alps()

pe = np.array([6.01428899, 5.97414799, 5.93957764, 5.9108219 , 5.74444911,
       5.75483779, 5.75195356, 5.75286576, 5.75360276, 5.78553427,
       5.95921879, 5.98470427, 5.91259362, 5.84689057, 5.83665709,
       5.80737578, 5.82763908, 5.80158199, 5.74773179, 5.75998415,
       5.70670133, 5.72027114, 5.66921374, 5.75082625, 5.67361911,
       5.77367561, 5.77757153, 5.6744964 , 5.71774329, 5.75680908,
       5.6821445 , 5.69454597, 5.7773016 , 5.80599346, 5.71658878,
       5.63867929, 5.65312945, 5.73634795, 5.72582993, 5.74534371,
       5.75165713, 5.62569904, 5.65007287, 5.69344271, 5.71040097,
       5.874575  , 5.88296727, 5.81246743, 5.85516811, 5.76822146,
       5.75556946, 5.841264  , 5.79896054, 5.76490065, 5.78877524,
       5.87002105, 5.87445147, 5.8223061 , 5.65788304, 5.75408702,
       5.71228062, 5.70157331, 5.76603559, 5.80734005, 5.82109977,
       5.77074591, 5.73960003, 5.70007301, 5.69813815, 5.7380972 ,
       5.65486641, 5.63925263, 5.64187826, 5.60774718, 5.74776973,
       5.80243772, 5.83574274, 5.92635372, 5.94919987, 5.82821762,
       5.82164812, 5.79886195, 5.78183551, 5.80898823, 5.77866007,
       5.93069993, 5.87129379, 5.84119861, 5.87485499, 5.86122072,
       5.84507893, 5.83017378, 5.89644066, 5.8309791 , 5.85366463,
       5.76837095, 5.79447755, 5.85629566, 5.79075076, 5.84742241,
       5.84306589, 5.84195732, 5.89904673, 5.92737431, 5.85683465,
       5.84786763, 5.85583835, 5.79904246, 5.88858989, 5.88253537,
       5.88691891, 5.82621836, 5.83270238, 5.87523542, 5.91535956,
       5.92137545, 5.83076135, 5.91427289, 5.90232985, 6.00529486])

alps = np.array([2.04597997, 2.73177576, 2.69298615, 2.72540894, 2.83964313,
       2.91386832, 2.89825384, 2.92563383, 2.90292398, 2.94325521,
       2.8169157 , 2.67547548, 2.68765637, 2.66212473, 2.73423751,
       2.86120437, 2.67589776, 2.85030204, 2.87655634, 2.71626923,
       3.01765623, 2.85442162, 3.15032216, 3.13645581, 3.08085439,
       3.11761865, 3.05254009, 3.12846688, 3.01607518, 2.96285211,
       3.01701193, 3.1070521 , 3.03115975, 3.06483372, 2.92058849,
       3.17357687, 3.02853112, 2.99353979, 3.00972764, 3.00176524,
       3.03917582, 3.14726478, 3.05628152, 3.07729876, 3.00585432,
       2.78628105, 2.90952591, 3.03957393, 2.79871313, 2.82005293,
       2.86383   , 2.84717751, 2.84477002, 2.86200921, 2.95932472,
       2.9882788 , 2.83540694, 2.89584097, 3.0627591 , 2.94265574,
       2.99958131, 3.02223244, 2.91326928, 2.90584176, 2.97917101,
       3.0479304 , 2.98458461, 3.07483589, 3.05157678, 2.96965822,
       2.96090283, 2.95745831, 3.01570959, 3.27792729, 2.93018508,
       2.91032214, 2.93722183, 2.84089223, 2.80032408, 2.85408532,
       2.99306702, 2.94308182, 2.89783553, 3.03470587, 2.95934329,
       2.76332354, 2.84990389, 2.84330052, 2.81351568, 2.70560831,
       2.87689743, 2.9055002 , 2.84040357, 2.90588564, 3.03089909,
       2.94066352, 2.90166483, 2.9131808 , 2.9523951 , 2.93891712,
       2.98127239, 2.90077567, 2.84563089, 2.76499277, 2.71670888,
       2.91342559, 2.73234833, 2.98472013, 2.67289303, 2.86313459,
       2.92037373, 2.82705879, 2.90003765, 2.85674306, 2.6659717 ,
       2.62397973, 2.91275713, 2.92289009, 2.83877135, 2.54785527])

np.testing.assert_almost_equal(impol.alps, alps, 12)
np.testing.assert_almost_equal(impol.pers_entr, pe, 12)